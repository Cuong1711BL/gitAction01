name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]  # Define Node.js versions for testing
    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

  test:
    runs-on: ubuntu-latest
    needs: build  # Wait for build job to finish
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Test on multiple OSs
        node-version: [14, 16, 18]  # Test on multiple Node.js versions
    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Run tests
      - name: Run Tests
        run: |
          echo "Testing on Node.js ${{ matrix.node-version }} and OS ${{ matrix.os }}"
          node node_modules/jest/bin/jest.js --forceExit

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test  # Wait for tests to pass
    if: github.ref == 'refs/heads/staging'  # Only trigger on staging
    environment: staging
    steps:
      - name: Deploy to Staging
        run: echo "Deploying to staging environment..."

  deploy-production:
    runs-on: ubuntu-latest
    needs: test  # Wait for tests to pass
    if: github.ref == 'refs/heads/master'  # Only trigger on master
    environment: production
    steps:
      # Require manual approval
      - name: Deploy to Production
        run: echo "Deploying to production environment..."
